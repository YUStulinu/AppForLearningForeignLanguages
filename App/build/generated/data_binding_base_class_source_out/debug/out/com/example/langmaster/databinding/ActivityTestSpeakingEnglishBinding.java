// Generated by view binder compiler. Do not edit!
package com.example.langmaster.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.langmaster.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTestSpeakingEnglishBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button buttonNext;

  @NonNull
  public final Button buttonStartTest;

  @NonNull
  public final TextView textViewResult;

  @NonNull
  public final TextView textViewWord;

  private ActivityTestSpeakingEnglishBinding(@NonNull RelativeLayout rootView,
      @NonNull Button buttonNext, @NonNull Button buttonStartTest, @NonNull TextView textViewResult,
      @NonNull TextView textViewWord) {
    this.rootView = rootView;
    this.buttonNext = buttonNext;
    this.buttonStartTest = buttonStartTest;
    this.textViewResult = textViewResult;
    this.textViewWord = textViewWord;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTestSpeakingEnglishBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTestSpeakingEnglishBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_test_speaking_english, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTestSpeakingEnglishBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_next;
      Button buttonNext = ViewBindings.findChildViewById(rootView, id);
      if (buttonNext == null) {
        break missingId;
      }

      id = R.id.button_start_test;
      Button buttonStartTest = ViewBindings.findChildViewById(rootView, id);
      if (buttonStartTest == null) {
        break missingId;
      }

      id = R.id.text_view_result;
      TextView textViewResult = ViewBindings.findChildViewById(rootView, id);
      if (textViewResult == null) {
        break missingId;
      }

      id = R.id.text_view_word;
      TextView textViewWord = ViewBindings.findChildViewById(rootView, id);
      if (textViewWord == null) {
        break missingId;
      }

      return new ActivityTestSpeakingEnglishBinding((RelativeLayout) rootView, buttonNext,
          buttonStartTest, textViewResult, textViewWord);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
